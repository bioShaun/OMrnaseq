#!/usr/bin/env python
# coding=utf-8

import click
import os
import sys
reload(sys)
sys.setdefaultencoding('utf-8')


CURRENT_DIR = os.getcwd()
DEFAULT_DIR = os.path.abspath(CURRENT_DIR)
DEFAULT_NAME = os.path.basename(DEFAULT_DIR)


SCRIPT_TEMP = '''
#! /bin/bash
_qc_wrapper qc \\
    --proj-dir {pd} \\
    --workers {wk} \\
    --proj-name {pn} \\
    --sample-inf {si} \\
    --report {rp}
'''


@click.command()
@click.option(
    '-p',
    '--proj_dir',
    type=click.Path(exists=True, file_okay=False),
    default=DEFAULT_DIR,
    help='project analysis directory, default is current dir.'
)
@click.option(
    '-n',
    '--proj_name',
    type=click.STRING,
    default=DEFAULT_NAME,
    help='project name to put on report.',
)
@click.option(
    '-d',
    '--fq_dir',
    help='directory store fastq files.',
    type=click.Path(file_okay=False, exists=True),
    default=None,
)
@click.option(
    '-nr',
    '--no_report',
    help='Do not generate a qc report.',
    is_flag=True,
    default=False,
)
@click.option(
    '-w',
    '--workers',
    help='parall thread number [default 4].',
    default=4,
)
def main(proj_dir, proj_name, fq_dir, no_report, workers):
    qc_script = os.path.join(proj_dir, 'qc.sh')
    fq_cfg = os.path.join(proj_dir, 'fq_cfg')
    if not os.path.isfile(fq_cfg):
        if fq_dir is None:
            print '--fq_dir is needed when fq_cfg not exists!'
        else:
            os.system('get_fq_cfg {fd} {fc} {pd}/fq_dir'.format(
                fd=fq_dir,
                fc=fq_cfg,
                pd=proj_dir
            ))
    output_report = 'yes'
    if no_report:
        output_report = 'no'
    with open(qc_script, 'w') as qc_inf:
        qc_cont = SCRIPT_TEMP.format(
            pd=proj_dir,
            pn=proj_name,
            si=fq_cfg,
            wk=workers,
            rp=output_report
        )
        qc_inf.write(qc_cont)
    os.system('nohup sh {sh} > {sh}.log 2>&1 &'.format(
        sh=qc_script
    ))


if __name__ == '__main__':
    main()
